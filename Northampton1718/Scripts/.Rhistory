dat_pick$Pick_Result <- apply(dat_pick[,c('home','visitor','result')],1,
pick_res)
dat_awaypick$Pick_Result <- apply(dat_awaypick[,c('home','visitor','result')],1,
pick_res)
dat_homepick$Pick_Result <- apply(dat_homepick[,c('home','visitor','result')],1,
pick_res)
View(dat_homepick)
away_results <- table(dat_awaypick$Pick_Result, dat_awaypick$home)
home_results <- table(dat_homepick$Pick_Result, dat_homepick$visitor)
away_results
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
View(data)
awayres <- table(dat_awaypick$home,dat_awaypick$Pick_Result)
awayres
data_tst <- data.frame(awayres)
View(data_tst)
awayres[2]
awayres[0]
awayres[1,1]
awayres[1,0]
awayres(1)
awayres["LOSS"]
data_tst2 <- data.frame(away_results)
View(data_tst2)
View(data)
runApp('soccer_dashboard_v2.R')
alltimerecord(england, "Northampton Town")
tst1 <- data.frame(alltimerecord(england, "Northampton Town"))
View(tst1)
tst1[1,]
runApp('soccer_dashboard_v2.R')
runApp('soccer_dashboard_v2.R')
runApp('soccer_dashboard_v2.R')
runApp('soccer_dashboard_v2.R')
runApp('soccer_dashboard_v2.R')
runApp('soccer_dashboard_v2.R')
View(tst1)
tst[3,]
tst1[3,]
games_between(england, "Northampton Town", "Leyton Orient")
games_between_sum(england, "Northampton Town", "Leyton Orient")
runApp('soccer_dashboard_v2.R')
runApp('soccer_dashboard_v2.R')
runApp('soccer_dashboard_v2.R')
library("rsconnect", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
rsconnect::setAccountInfo(name='usingdatascience',
token='4A71AA210A0FEC4FD4A0EBF759970567',
secret='<SECRET>')
rsconnect::setAccountInfo(name='usingdatascience',
token='4A71AA210A0FEC4FD4A0EBF759970567',
secret='g8wfdFZqH5tdB2yCdSaoHCf2WbZvtEsrLj8xP+VW')
getwd()
library(rsconnect)
rsconnect::deployApp('/Users/chappers/Documents/Data Science/Attendance Prediction/R_Shiny_App/deploy')
rsconnect::deployApp('/Users/chappers/Documents/Data Science/Attendance Prediction/R_Shiny_App/deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
runApp('deploy')
rsconnect::deployApp('/Users/chappers/Documents/Data Science/Attendance Prediction/R_Shiny_App/soccer')
rsconnect::deployApp('/Users/chappers/Documents/Data Science/Attendance Prediction/R_Shiny_App/soccer')
rsconnect::deployApp('/Users/chappers/Documents/Data Science/Attendance Prediction/R_Shiny_App/soccer')
runApp('soccer')
rsconnect::deployApp('/Users/chappers/Documents/Data Science/Attendance Prediction/R_Shiny_App/soccer')
rsconnect::deployApp('/Users/chappers/Documents/Data Science/Attendance Prediction/R_Shiny_App/soccer')
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
install_from_swirl("Regression Models")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install_from_swirl("Regression Models")
swirl()
plot(child~parent,galton)
plot(jitter(child,4) ~ parent/guardian)
plot(jitter(child,4) ~ parent,galton)
e
1
lm(child ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
swirl()
swirl()
myPlot <- function(beta){
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",
ylab = "child"
)
abline(0, beta, lwd = 3)
points(0, 0, cex = 2, pch = 19)
mse <- mean( (y - beta * x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myPlot(beta), beta = slider(0.4, .8, step = 0.02))
help(manipulate)
??manipulate
myPlot <- function(beta){
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",
ylab = "child"
)
abline(0, beta, lwd = 3)
points(0, 0, cex = 2, pch = 19)
mse <- mean( (y - beta * x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
myPlot
ยง
myPlot
library(httr)
# 1. Set up credentials
fitbit_endpoint <- oauth_endpoint(
request = "https://api.fitbit.com/oauth2/token",
authorize = "https://www.fitbit.com/oauth2/authorize",
access = "https://api.fitbit.com/oauth2/token")
myapp <- oauth_app(
appname = "data_access",
key = "22CLZJ",
secret = "09baad06bcceddd798e6c47e3464fd17")
# 2. Get OAuth token
scope <- c("sleep","activity")  # See dev.fitbit.com/docs/oauth2/#scope
fitbit_token <- oauth2.0_token(fitbit_endpoint, myapp,
scope = scope, use_basic_auth = TRUE)
library(httr)
# 1. Set up credentials
fitbit_endpoint <- oauth_endpoint(
request = "https://api.fitbit.com/oauth2/token",
authorize = "https://www.fitbit.com/oauth2/authorize",
access = "https://api.fitbit.com/oauth2/token")
myapp <- oauth_app(
appname = "NeilsApp",
key = "22CLZJ",
secret = "09baad06bcceddd798e6c47e3464fd17")
# 2. Get OAuth token
scope <- c("sleep","activity")  # See dev.fitbit.com/docs/oauth2/#scope
fitbit_token <- oauth2.0_token(fitbit_endpoint, myapp,
scope = scope, use_basic_auth = TRUE)
library(httr)
key <- Sys.getenv('22CLZJ')
secret <- Sys.getenv('09baad06bcceddd798e6c47e3464fd17')
fbr <- oauth_app('FitteR',key,secret)
accessTokenURL <-  'https://api.fitbit.com/oauth2/token'
authorizeURL <- 'https://www.fitbit.com/oauth2/authorize'
fitbit <- oauth_endpoint(authorize = authorizeURL, access = accessTokenURL)
token <- oauth2.0_token(fitbit,fbr, scope=c("activity", "heartrate", "sleep"), use_basic_auth = TRUE)
library(httr)
client_id <- Sys.getenv('22CLZJ')
client_secret <- Sys.getenv('09baad06bcceddd798e6c47e3464fd17')
fbr <- oauth_app('FitteR',client_id,client_secret)
accessTokenURL <-  'https://api.fitbit.com/oauth2/token'
authorizeURL <- 'https://www.fitbit.com/oauth2/authorize'
fitbit <- oauth_endpoint(authorize = authorizeURL, access = accessTokenURL)
token <- oauth2.0_token(fitbit,fbr, scope=c("activity", "heartrate", "sleep"), use_basic_auth = TRUE)
##PARAMETERS###
#remove -1 for today, or enter date as "YYYY-MM-DD" (with quotes) for any other day
date_to_download <- as.character("2017-06-19")
##enter your personal key and secret here, leave them in quotes!
##example -- change to:  client_id <- "123ABC"
client_id <- "22CLZJ"
secret <- "09baad06bcceddd798e6c47e3464fd17"
###path to save CSV and plot
### example -- change to: outpath <- "C:/Users/JaneDoe/Desktop/HeartRate"
outpath <- "/users/chappers/Documents"
library(jsonlite)
library(httr)
library(ggplot2)
library(plyr)
fbr <- oauth_app('FitteR',client_id,secret)
accessTokenURL <-  'https://api.fitbit.com/oauth2/token'
authorizeURL <- 'https://www.fitbit.com/oauth2/authorize'
fitbit <- oauth_endpoint(authorize = authorizeURL, access = accessTokenURL)
token <- oauth2.0_token(fitbit,fbr, scope=c("activity", "heartrate", "sleep"),
use_basic_auth = TRUE, cache=FALSE)
fbr <- oauth_app('NeilsApp',client_id,secret)
accessTokenURL <-  'https://api.fitbit.com/oauth2/token'
authorizeURL <- 'https://www.fitbit.com/oauth2/authorize'
fitbit <- oauth_endpoint(authorize = authorizeURL, access = accessTokenURL)
token <- oauth2.0_token(fitbit,fbr, scope=c("activity", "heartrate", "sleep"),
use_basic_auth = TRUE, cache=FALSE)
##PARAMETERS###
#remove -1 for today, or enter date as "YYYY-MM-DD" (with quotes) for any other day
date_to_download <- as.character("2017-06-19")
##enter your personal key and secret here, leave them in quotes!
##example -- change to:  client_id <- "123ABC"
client_id <- "22CLZJ"
secret <- "09baad06bcceddd798e6c47e3464fd17"
###path to save CSV and plot
### example -- change to: outpath <- "C:/Users/JaneDoe/Desktop/HeartRate"
outpath <- "/users/chappers/Documents"
#################
library(jsonlite)
library(httr)
library(ggplot2)
library(plyr)
##make no changes below here, unless you know what you're doing.
dir.create(file.path(outpath, "plot"))
dir.create(file.path(outpath, "data"))
fbr <- oauth_app('NeilsApp',client_id,secret)
accessTokenURL <-  'https://api.fitbit.com/oauth2/token'
authorizeURL <- 'https://www.fitbit.com/oauth2/authorize'
fitbit <- oauth_endpoint(authorize = authorizeURL, access = accessTokenURL)
token <- oauth2.0_token(fitbit,fbr, scope=c("activity", "heartrate", "sleep"),
use_basic_auth = TRUE, cache=FALSE)
library(httr)
# 1. Set up credentials
fitbit_endpoint <- oauth_endpoint(
request = "https://api.fitbit.com/oauth2/token",
authorize = "https://www.fitbit.com/oauth2/authorize",
access = "https://api.fitbit.com/oauth2/token")
myapp <- oauth_app(
appname = "NeilsApp",
key = "22CLZJ",
secret = "09baad06bcceddd798e6c47e3464fd17")
# 2. Get OAuth token
scope <- c("sleep","activity")  # See dev.fitbit.com/docs/oauth2/#scope
fitbit_token <- oauth2.0_token(fitbit_endpoint, myapp,
scope = scope, use_basic_auth = TRUE)
library(httr)
# 1. Set up credentials
fitbit_endpoint <- oauth_endpoint(
request = "https://api.fitbit.com/oauth2/token",
authorize = "https://www.fitbit.com/oauth2/authorize",
access = "https://api.fitbit.com/oauth2/token")
myapp <- oauth_app(
appname = "NeilsApp",
key = "22CLZJ",
secret = "09baad06bcceddd798e6c47e3464fd17")
# 2. Get OAuth token
scope <- c("sleep","activity")  # See dev.fitbit.com/docs/oauth2/#scope
fitbit_token <- oauth2.0_token(fitbit_endpoint, myapp,
scope = scope, use_basic_auth = TRUE)
library(shiny); runApp('soccer_dashboard_v1.R')
setwd("~/Documents/Data Science/Attendance Prediction/R_Shiny_App")
runApp('soccer_dashboard_v1.R')
runApp('soccer')
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
q1<-lm(y~x)
summary(q1)
data(mtcars)
head(mtcars)
q3<-lm(mpg~wt, data=mtcars)
mean_val = data.frame(wt=mean(mtcars$wt))
predict(carslm, mean_val, interval="confidence")
q3<-lm(mpg~wt, data=mtcars)
mean_val = data.frame(wt=mean(mtcars$wt))
predict(q3, mean_val, interval="confidence")
help(mtcars)
new_carweight = data.frame(wt=3)
predict(q3, new_carweight, interval="predict")
new_prd <-lm(mpg~I(wt/2), data=mtcars)
newsummary <-summary(new_prd)$coefficients
newsummary
shiny::runApp('test_shiny')
data("mtcars")
mtcars$cyl = as.factor(mtcars$cyl)
fit = lm(mpg~factor(cyl)+wt,data=mtcars)
View(mtcars)
summary(fit)
factor(cyl)
tst <- factor(mtcars$cyl)
coefficients(fit)
data("mtcars")
data("mtcars")
View(mtcars)
mtcars$cyl = as.factor(mtcars$cyl)
mtcars$cyl = factor(mtcars$cyl)
fit = lm(mpg~factor(cyl)+wt,data=mtcars)
fit = lm(mpg~factor(cyl)+wt,data=mtcars)
summary(fit)
summary(fit)$coef
fit = lm(mpg~factor(cyl)+wt-1,data=mtcars)
summary(fit)
setwd("~/Documents/Data Science/Attendance Prediction/R_Shiny_App")
library(ggplot2)
sds <- read.csv("league1_data_full_v2.csv", stringsAsFactors = FALSE)
new_mdate<- as.Date(sds$MatchDate, "%d/%m/%Y")
MonthofMatch <- as.integer(strftime(new_date, "%m"))
MatchMonth<- months(new_mdate)
MatchMonth <- factor(MatchMonth,
labels = c("Jan", "Feb", "Mar", "Apr" ," May", "Aug", "Sep", "Oct",
"Nov","Dec"))
MatchMonth
View(sds)
sds <- read.csv("tester1.csv", stringsAsFactors = FALSE)
View(sds)
sds <- read.csv("tester1.csv", stringsAsFactors = FALSE)
View(sds)
library(shiny); runApp('soccer_app_v1.R')
runApp('soccer_app_v1.R')
runApp('soccer_app_v1.R')
runApp('soccer_app_v1.R')
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rvest", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages('rvest')
install.packages('stringr')
install.packages('tidyr')
url <- 'http://www.bbc.co.uk/sport/football/41482931'
webpage <- read_html(url)
install.packages("rvest")
library('rvest')
library('stringr')
library('tidyr')
url <- 'http://www.bbc.co.uk/sport/football/41482931'
webpage <- read_html(url)
price_table <- html_nodes(webpage, 'table')
pt <- html_table(price_table)[[1]]
head(pt)
View(pt)
pt2 <- html_table(price_table)[[2]]
head(pt2)
View(pt2)
data("mtcars")
mtcars$cyl = factor(mtcars$cyl)
fit = lm(mpg~factor(cyl)+wt,data=mtcars)
summary(fit)
fit2 = lm(mpg ~ factor(cyl)+ wt, data=mtcars)
fit3 = lm(mpg ~ factor(cyl), data=mtcars)
summary(fit2)$coefficients[3]
summary(fit3)$coefficients[3]
library(lmtest)
fit1 <- lm(mpg ~ cyl + wt, data = mtcars)
fit2 <- lm(mpg ~ cyl + wt + cyl*wt, data = mtcars)
summary(fit1)$adj.r.squared
summary(fit2)$adj.r.squared
fit <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit)$coefficients
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit6=lm(y~x)
dfit = dffits(fit6)
max =  max(abs(dfit))
hatvalues(fit6)[which(abs(df
hatvalues(fit6)[which(abs(dfit)==max)]
hatvalues(fit6)[which(abs(dfit)==max)]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
dfbetas(fit6)[which(hatvalues(fit6)==max(hatvalues(fit6))),2]
fit2 = lm(mpg ~ factor(cyl)+ wt, data=mtcars)
fit3 = lm(mpg ~ factor(cyl), data=mtcars)
summary(fit2)$coefficients[3]
summary(fit3)$coefficients[3]
fit6=lm(y~x)
dfit = dffits(fit6)
max =  max(abs(dfit))
hatvalues(fit6)[which(abs(dfit)==max)]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
dfbetas(fit6)[which(hatvalues(fit6)==max(hatvalues(fit6))),2]
fit2 = lm(mpg ~ factor(cyl)+ wt, data=mtcars)
fit3 = lm(mpg ~ factor(cyl), data=mtcars)
summary(fit2)
summary(fit2)$coefficients[3]
summary(fit3)$coefficients[3]
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
swirl()
lm(child~parent,data=galton)
fit <- lm(child ~ parent, galton)
2
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
deviance(fit)/(n-2)
sqrt(deviance(fit)/(n-2))
e
2
mu <- mean(galton$child)
2
sTot <- sum((galton$child-mu)^2)
2
sRes <- deviance(fit)
2
1-sRes/sTot
2
summary(fit)$r.squared
2
cor(galton$parent,galton$child)^2
2
ones <- rep(1, nrow(galton))
2
swirl()
2
ones <- rep(1, nrow(galton))
2
2
library(shiny); runApp('~/Documents/Data Science/SoccerAnalytics/Northampton1718/Scripts/cobblers_1718_v1/cobb_app_v3.R')
runApp('~/Documents/Data Science/SoccerAnalytics/Northampton1718/Scripts/cobblers_1718_v1/cobb_app_v3.R')
runApp('~/Documents/Data Science/SoccerAnalytics/Northampton1718/Scripts/cobblers_1718_v1/cobb_app_v3.R')
library(shiny); runApp('~/Documents/Data Science/SoccerAnalytics/Northampton1718/Scripts/cobblers_1718_v1/cobb_app_v3.R')
library(shiny); runApp('~/Documents/Data Science/SoccerAnalytics/Northampton1718/Scripts/cobblers_1718_v1/cobb_app_v3.R')
setwd("~/Documents/Data Science/SoccerAnalytics/Northampton1718/Scripts")
source('~/Documents/Data Science/SoccerAnalytics/Northampton1718/Scripts/match_events_npton.R', echo=TRUE)
runApp('cobblers_1718_v1/cobb_app_v3.R')
runApp('cobblers_1718_v1/cobb_app_v3.R')
mstats<-read.csv("match_data_v2.csv")
# remove rows of dataframe where event type = NONE
mstats<- subset(mstats, event_type!="NONE")
# strip out whitespace from event_player field
mstats$event_player <- trimws(mstats$event_player)
# set timing field as integer
mstats$Timing <- as.integer(mstats$Timing)
mstats$added_time <- as.integer(mstats$added_time)
# set match_date as date field
mstats$match_date <- as.Date(mstats$match_date, format = '%d-%m-%Y')
# create and populate the min_range field, for minute of match range
# initialise new field, min_range
mstats$min_range <- ""
for (row in 1:nrow(mstats)) {
if ((mstats$Timing[row]>0) & (mstats$Timing[row]<=15)) {
mstats$min_range[row]<-c("1 - 15 mins")
}
if ((mstats$Timing[row]>15) & (mstats$Timing[row]<=30)) {
mstats$min_range[row]<-c("16 - 30 mins")
}
if ((mstats$Timing[row]>30) & (mstats$Timing[row]<=45)) {
mstats$min_range[row]<-c("31 - 45 mins")
if ((mstats$added_time[row]>0) & (mstats$Timing[row]==45)) {
mstats$Timing[row]<-as.numeric(45.5)
mstats$min_range[row]<-c("45+")
}
}
if ((mstats$Timing[row]>=46) & (mstats$Timing[row]<=60)) {
mstats$min_range[row]<-c("46 - 60 mins")
}
if ((mstats$Timing[row]>60) & (mstats$Timing[row]<=75)) {
mstats$min_range[row]<-c("61 - 75 mins")
}
if ((mstats$Timing[row]>75) & (mstats$Timing[row]<=90)) {
mstats$min_range[row]<-c("76 - 90 mins")
if ((mstats$added_time[row]>0) & (mstats$Timing[row]==90)) {
mstats$Timing[row]<-as.integer(91)
mstats$min_range[row]<-c("90+")
}
}
}
home_matches <- subset(mstats,H_A=="HOME")
away_matches <- subset(mstats,H_A=="AWAY")
evts_date_h <- data.frame(table(home_matches$match_date, home_matches$event_type))
evts_date_a <- data.frame(table(away_matches$match_date, away_matches$event_type))
evts_date <- data.frame(table(mstats$match_date, mstats$event_type))
play_data <- subset(mstats,event_player!="NONE")
play_pivot <- data.frame(table(play_data$event_player,play_data$H_A,play_data$event_type))
play_pivot <- subset(play_pivot, substr(play_pivot$Var1,start=1,stop=6)!="SECOND")
play_pivot2 <- data.frame(table(play_data$event_player,play_data$event_type))
View(play_pivot2)
tst1 <- box_func("BOTH","ASH TAYLOR")
box_func <- function(Var2Venue,PickPlayer) {
if (Var2Venue=="BOTH") {
# create data frames for players
md_p <- subset(play_pivot2, Var1==PickPlayer)
# reshape long to wide
md_p <- reshape(md_p, idvar = "Var1", timevar = "Var2", direction = "wide")
}
else {
# create data frames for players
md_p <- subset(play_pivot, Var1==PickPlayer & Var2==Var2Venue)
# drop the Var2 column, home or away
md_p <- subset(md_p, select = -c(Var2))
# reshape long to wide
md_p <- reshape(md_p, idvar = "Var1", timevar = "Var3", direction = "wide")
}
return(md_p)
}
tst1 <- box_func("BOTH","ASH TAYLOR")
View(tst1)
tst2 <- box_func("HOME","ASH TAYLOR")
View(tst2)
runApp('cobblers_1718_v1/cobb_app_v3.R')
runApp('cobblers_1718_v1/cobb_app_v3.R')
runApp('cobblers_1718_v1/cobb_app_v4.R')
runApp('cobblers_1718_v1/cobb_app_v4.R')
runApp('cobblers_1718_v1/cobb_app_v4.R')
runApp('cobblers_1718_v1/cobb_app_v4.R')
runApp('cobblers_1718_v1/cobb_app_v4.R')
